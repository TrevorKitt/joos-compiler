Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1w_RestrictedNative.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Extends_SimpleTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_ClassDeclaration_WrongFileName_Dot.foo.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_constructorWithSameNameAsMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_JoosTypes_Long.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forMethodUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_lazybooleanoperations.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Interface_ConstructorBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_MultiArrayCreation_MissingDimension_4.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_SimpleTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_PackagePrivate_Method.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_NestedTypes.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_minuschar.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_stringliterals.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseOr.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_3DigitOctal_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Throw_NotExpression.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Strictftp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_externalcall.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forWithoutInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_For_PrimaryExpInUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_arithmeticoperations.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_Plus.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Circularity_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_minusminusminus.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_Native.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_SuperThis_SuperAfterStatement.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Extends_NamedTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_StringPreInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Throw_ThrowsNotSuperclass.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeCharCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_Divide.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_SmallInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Methods_MissingAccessModifier.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Synchronized.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forifstatements2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_6_Assignable_Instanceof_SimpleTypeOfSimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_VoidType_Field.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp5.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_PackagePrivate_Class.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Identifiers_Goto.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_IncDec_Parenthesized.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_Final_PreDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_CastToArrayLvalue.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J2_staticfielddeclaration.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Unicode.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_MultiArrayCreation_Assign_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Array_Data.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Instanceof_OfCastExpression.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_char_escape3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_if_then.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_char_escape.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_AbstractMethod_EmptyBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp7.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseXOR.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_StringPostInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_IntArrayDecl2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Cast_NonstaticField.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_CharCharInit1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseAnd.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_SuperThis_TwoSuperCalls.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_Remainder.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_DoWhile.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_assignment.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_SuperThis_SuperAfterBlock.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_For_PrimaryExpInInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Formals_Initializer_Constructor.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_staticmethoddeclaration.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_ClassInstantiation_InstantiateSimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_VoidType_ArrayDeclaration.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Instanceof_InLazyExp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_StaticThis_ArgumentToSuper.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_2DigitOctal_3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_barminusfoo.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_VoidType_VoidMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_IntRange_MinNegativeInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Cast_DoubleParenthese.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_VoidType_Formals.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forAlwaysInitAsWhile.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_maxint_comment.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Break.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Cast_ToMethodInvoke.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeIntCast2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_PrivateMethods.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Escapes_3DigitOctalAndDigit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_2DigitOctal_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_SuperThis_SuperInBlock.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Formals_Initializer_Method.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_protected.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_MultiArrayCreation_MissingDimension_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forifstatements1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Switch.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_VoidType_ArrayCreation.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_exp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp4.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_SuperThis_InvalidThisParameter.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_publicmethods.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Cast_Expression.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_ClosestMatch_Array.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_hello_comment.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_IntRange_NegativeInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Interface_Field.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_IntRange_MinusTooBigInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Throw_NoThrows.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forbodycast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Access_ProtectedLocal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_char.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forWithoutExp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_nonemptyconstructor.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_PrivateFields.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Implements_Value.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_protectedfields.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forMethodUpdate2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_constructorparameter.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_negativeintcast3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_AbstractMethod_Body.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_VoidType_Local.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeByteCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_intliterals.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_IntRange_TooBigIntNegated.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_abstractclass.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_classinstance.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_MultiArrayTypes_Dimensions.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_IntCharInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_IntArrayDecl1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forWithoutUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forinitcast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_IncDec_IncDecNotLvalue.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_AbstractMethod_Static.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_octal_escape3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeOneByteShortCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Declarations_MultipleVars.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Cast_MultipleReferenceArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_BigInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_EscapeEscape.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeIntCast1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_InstanceOf_Null.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Array_Data_Empty.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Cast_Complement.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_ifThenElse.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_SuperThis_SuperInMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_17_Unreachable_AfterThrow.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_charadd.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_01.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_1DigitOctal_3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Array_OnVariableNameInDecl.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_Minus.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Throws_SimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_StringPreDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_integerFun1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_17_Unreachable_AfterThrowInConditional.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Extends_SimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Cast_MultipleCastOfSameValue_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_eagerbooleanoperations.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_AmbiguousName_AccessResultFromMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_abstractmethodwithoutbody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_AbstractClass_AbstractConstructor.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Methods_StaticFinal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_primitivecasts.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Cast_MultipleCastOfSameValue_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Bitwise_Negation.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_MultipleTypesPrFile.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forupdatecast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Cast_LeftHandSideOfAssignment_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_integerFun3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forinfor.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_MultiArrayCreation_NoType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_CharCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Implements_NamedTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Throw_NotSubclass.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_CharCharInit2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Interface_StaticMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_implements.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Cast_MultipleCastOfSameValue_3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_finalclass.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_SuperThis_InvalidSuperParameter.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_For_MultipleUpdates.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Choice.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_newobject.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp8.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Implements_SimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_ClosestMatch_Constructor_NoClosestMatch_This.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_SignShiftRight.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_publicfields.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_IsThisACast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Interface_NoBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_if_then_for.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Methods_NonAbstractNoBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_publicconstructors.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp6.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_IntRange_TooBigInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_AbstractClass_Final.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_Final_PreInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_InstanceInitializers.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_ClassDeclaration_WrongFileName_Suffix.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp9.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_VoidType_Cast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Access_PublicLocal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Interface_WrongFileName.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_AbstractMethod_Final.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_nullinstanceof1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_StaticThis_ArgumentToThis.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_octal_escape4.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_if.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_JoosTypes_Float.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Literals_Class.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_IntCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_StringPostDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_ClassInstantiation_InstantiateSimpleValue.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1w_Interface.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_arbitrarylocaldeclaration.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeOneByteCharCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Literals_Octal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_BitShift_Left.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_publicclasses.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_integerFun.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_NonExistingEscape.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_ArrayCreateAndIndex.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Circularity_4_Rhoshaped.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_SuperThis_ThisAfterStatement.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Cast_NoParenthesis.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forAllwaysInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_octal_escape.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_constructorbodycast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_IntRange_TooBigInt_InInitializer.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_ForUpdate_ClassCreation.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Cast_LeftHandSideOfAssignment_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_InstanceOf_Void.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_finalclass2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Declarations_MultipleVars_Fields.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Literals_Long.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_1DigitOctal_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Transient.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_Multiply.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Access_PrivateLocal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Extends_Value.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_AbstractMethodCannotBeFinal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Volatile.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Throw_SimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Interface_FinalMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Literals_Exponential.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_ShiftLeft.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Throws_Array.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_BitShift_ZeroRight.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_JoosTypes_Double.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Implements_SimpleTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeOneByteByteCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_6_InstanceOf_Primitive_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_Final_ArrayLengthInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Throws_Void.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_Final_ArrayLengthDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_assignmentExp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_concat_in_binop.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_SynchronizedStatement.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_2DigitOctal_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1w_StaticField.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_IntInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forMethodInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_ExpressionSequence.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_char_escape2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_UnaryPlus.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_charliterals.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J2_staticFieldDecl.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_BitShift_SignRight.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_3DigitOctal_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_6_InstanceOf_Primitive_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_ZeroShiftRight.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Circularity_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_InstanceOf_Primitive.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_Final_PostInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_nullliteral.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_for_no_short_if.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_comparisonoperations.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_StaticInitializers.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Locals_Final.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_extends.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_MultiArrayCreation_Assign_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_PackagePrivate_Field.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Identifiers_Private.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Interface_ConstructorAbstract.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_For_StatementInInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Interface_MethodBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NegIntTooLow.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_IncDec_Final_PostDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_Continue.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Circularity_3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_For_MultipleDeclarationsInInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_NonJoosConstructs_SuperMethodCall.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_evalMethodInvocationFromParExp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_weird_chars.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_Throws.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_stringliteralinvoke.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Literals_Float.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_For_DeclarationInUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_ClassDeclaration_WrongFileName.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_LabeledStatements.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_FinalField_NoInitializer.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Formals_Final.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeShortCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_Throws_This.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NamedTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_1DigitOctal_4.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_commentsInExp1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_1DigitOctal_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_For_NotAStatementInUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_16_MultiArrayCreation_Null.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_intminusfoo.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_octal_escape2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_octal_escape5.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_MultiArrayCreation_MissingDimension_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_SuperThis_SuperThis.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_Literals_Hex.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_1_Instanceof_OfAdditiveExpression.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_IntRange_PlusTooBigInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_NegativeOneByteIntCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Scanner Test - Scanning file: Je_1_Escapes_3DigitOctal_3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: Je_1_SuperThis_ThisInMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Scanner Test: Testing the scanner Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Scanner Test - Scanning file: J1_forifstatements3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1w_RestrictedNative.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Extends_SimpleTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_ClassDeclaration_WrongFileName_Dot.foo.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_constructorWithSameNameAsMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_JoosTypes_Long.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forMethodUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_lazybooleanoperations.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Interface_ConstructorBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_MultiArrayCreation_MissingDimension_4.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_SimpleTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_PackagePrivate_Method.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_NestedTypes.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_minuschar.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_stringliterals.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseOr.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_3DigitOctal_2.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Throw_NotExpression.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Strictftp.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_externalcall.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forWithoutInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_For_PrimaryExpInUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_arithmeticoperations.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Plus.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_Circularity_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_minusminusminus.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_Native.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_SuperThis_SuperAfterStatement.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Extends_NamedTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_StringPreInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_16_Throw_ThrowsNotSuperclass.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeCharCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Divide.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_SmallInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Methods_MissingAccessModifier.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Synchronized.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forifstatements2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_6_Assignable_Instanceof_SimpleTypeOfSimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_VoidType_Field.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp5.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_PackagePrivate_Class.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Identifiers_Goto.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_IncDec_Parenthesized.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_Final_PreDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_CastToArrayLvalue.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J2_staticfielddeclaration.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Unicode.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_MultiArrayCreation_Assign_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Array_Data.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Instanceof_OfCastExpression.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_char_escape3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_if_then.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_char_escape.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_AbstractMethod_EmptyBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp7.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseXOR.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_StringPostInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_IntArrayDecl2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Cast_NonstaticField.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_CharCharInit1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseAnd.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_SuperThis_TwoSuperCalls.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Remainder.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_DoWhile.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_assignment.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_SuperThis_SuperAfterBlock.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_For_PrimaryExpInInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Formals_Initializer_Constructor.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_staticmethoddeclaration.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_ClassInstantiation_InstantiateSimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_VoidType_ArrayDeclaration.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Instanceof_InLazyExp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_16_StaticThis_ArgumentToSuper.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_2DigitOctal_3.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_barminusfoo.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_VoidType_VoidMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_IntRange_MinNegativeInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Cast_DoubleParenthese.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_VoidType_Formals.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forAlwaysInitAsWhile.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_maxint_comment.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Break.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Cast_ToMethodInvoke.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeIntCast2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_PrivateMethods.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Escapes_3DigitOctalAndDigit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_2DigitOctal_1.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_SuperThis_SuperInBlock.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Formals_Initializer_Method.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_protected.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_MultiArrayCreation_MissingDimension_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forifstatements1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Switch.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_VoidType_ArrayCreation.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_exp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp4.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_SuperThis_InvalidThisParameter.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_publicmethods.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Cast_Expression.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_ClosestMatch_Array.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_hello_comment.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_IntRange_NegativeInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Interface_Field.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_IntRange_MinusTooBigInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_16_Throw_NoThrows.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forbodycast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Access_ProtectedLocal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_char.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forWithoutExp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_nonemptyconstructor.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_PrivateFields.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Implements_Value.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_protectedfields.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forMethodUpdate2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_constructorparameter.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_negativeintcast3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_AbstractMethod_Body.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_VoidType_Local.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeByteCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_intliterals.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_IntRange_TooBigIntNegated.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_abstractclass.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_classinstance.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_MultiArrayTypes_Dimensions.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_IntCharInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_IntArrayDecl1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forWithoutUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forinitcast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_IncDec_IncDecNotLvalue.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_AbstractMethod_Static.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_octal_escape3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeOneByteShortCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Declarations_MultipleVars.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Cast_MultipleReferenceArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_BigInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_EscapeEscape.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeIntCast1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_InstanceOf_Null.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Array_Data_Empty.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Cast_Complement.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_ifThenElse.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_SuperThis_SuperInMethod.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_17_Unreachable_AfterThrow.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_charadd.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_01.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_1DigitOctal_3.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Array_OnVariableNameInDecl.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Minus.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Throws_SimpleType.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_StringPreDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_integerFun1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_17_Unreachable_AfterThrowInConditional.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Extends_SimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Cast_MultipleCastOfSameValue_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_eagerbooleanoperations.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_AmbiguousName_AccessResultFromMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_abstractmethodwithoutbody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_AbstractClass_AbstractConstructor.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Methods_StaticFinal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_primitivecasts.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Cast_MultipleCastOfSameValue_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Bitwise_Negation.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_MultipleTypesPrFile.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forupdatecast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Cast_LeftHandSideOfAssignment_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_integerFun3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forinfor.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_MultiArrayCreation_NoType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_CharCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Implements_NamedTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_16_Throw_NotSubclass.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_CharCharInit2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Interface_StaticMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_implements.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Cast_MultipleCastOfSameValue_3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_finalclass.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_16_SuperThis_InvalidSuperParameter.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_For_MultipleUpdates.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Choice.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_newobject.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp8.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Implements_SimpleType.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_ClosestMatch_Constructor_NoClosestMatch_This.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_SignShiftRight.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_publicfields.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_IsThisACast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Interface_NoBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_if_then_for.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Methods_NonAbstractNoBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_publicconstructors.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp6.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_IntRange_TooBigInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_AbstractClass_Final.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_Final_PreInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_InstanceInitializers.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_ClassDeclaration_WrongFileName_Suffix.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp9.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_VoidType_Cast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Access_PublicLocal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Interface_WrongFileName.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_AbstractMethod_Final.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_nullinstanceof1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_StaticThis_ArgumentToThis.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_octal_escape4.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_if.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_JoosTypes_Float.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Literals_Class.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_IntCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_StringPostDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_ClassInstantiation_InstantiateSimpleValue.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1w_Interface.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_arbitrarylocaldeclaration.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeOneByteCharCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Literals_Octal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_BitShift_Left.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_publicclasses.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_integerFun.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_NonExistingEscape.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_ArrayCreateAndIndex.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_Circularity_4_Rhoshaped.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_SuperThis_ThisAfterStatement.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Cast_NoParenthesis.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forAllwaysInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_octal_escape.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_constructorbodycast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_IntRange_TooBigInt_InInitializer.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_ForUpdate_ClassCreation.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Cast_LeftHandSideOfAssignment_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_InstanceOf_Void.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_finalclass2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Declarations_MultipleVars_Fields.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Literals_Long.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_1DigitOctal_1.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Transient.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Multiply.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Access_PrivateLocal.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Extends_Value.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_AbstractMethodCannotBeFinal.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Volatile.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_16_Throw_SimpleType.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Interface_FinalMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Literals_Exponential.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_ShiftLeft.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Throws_Array.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_BitShift_ZeroRight.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_JoosTypes_Double.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Implements_SimpleTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeOneByteByteCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_6_InstanceOf_Primitive_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_Final_ArrayLengthInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Throws_Void.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_Final_ArrayLengthDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_assignmentExp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_concat_in_binop.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_SynchronizedStatement.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_2DigitOctal_2.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1w_StaticField.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_IntInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forMethodInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_ExpressionSequence.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_char_escape2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_UnaryPlus.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_charliterals.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J2_staticFieldDecl.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_BitShift_SignRight.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_3DigitOctal_1.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_6_InstanceOf_Primitive_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_ZeroShiftRight.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_Circularity_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_InstanceOf_Primitive.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_Final_PostInc.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_nullliteral.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_for_no_short_if.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_comparisonoperations.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NonJoosConstructs_StaticInitializers.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Locals_Final.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_extends.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_MultiArrayCreation_Assign_2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_PackagePrivate_Field.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Identifiers_Private.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Interface_ConstructorAbstract.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_For_StatementInInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Interface_MethodBody.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_NegIntTooLow.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_IncDec_Final_PostDec.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_Continue.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_Circularity_3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_For_MultipleDeclarationsInInit.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_NonJoosConstructs_SuperMethodCall.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_evalMethodInvocationFromParExp.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_weird_chars.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_Throws.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_stringliteralinvoke.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Literals_Float.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_For_DeclarationInUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_ClassDeclaration_WrongFileName.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_LabeledStatements.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_FinalField_NoInitializer.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Formals_Final.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeShortCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_16_Throws_This.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NamedTypeArray.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_1DigitOctal_4.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_commentsInExp1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_1DigitOctal_2.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_For_NotAStatementInUpdate.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_16_MultiArrayCreation_Null.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_intminusfoo.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_octal_escape2.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_octal_escape5.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_MultiArrayCreation_MissingDimension_1.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_SuperThis_SuperThis.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_Literals_Hex.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_1_Instanceof_OfAdditiveExpression.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_IntRange_PlusTooBigInt.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_NegativeOneByteIntCast.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: Je_1_Escapes_3DigitOctal_3.java : Check if parser can parse this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[FAILED] Parser Test - Parsing file: Je_1_SuperThis_ThisInMethod.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
Parser Test: Testing the parser with Joos 1W files
---------------------------------------------------------------------------------------
[PASSED] Parser Test - Parsing file: J1_forifstatements3.java : Check if scanner can scan this file
---------------------------------------------------------------------------------------
FAILED TEST SUMMARY:
---------------------------------------------------------------------------------------
1) Scanning file: Je_1_Escapes_3DigitOctal_2.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_3DigitOctal_2{

    public Je_1_Escapes_3DigitOctal_2() {}

    public static int test(){
	char s = '\080';
	return 123;
    }
}

 : 0
2) Scanning file: Je_1_NonJoosConstructs_Unicode.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Unicode input not allowed in Joos
 */
public class Je_1_NonJoosConstructs_Unicode {

    public Je_1_NonJoosConstructs_Unicode() {}

    public static int test(){
	String x = "\u16aa";
	return 123;
    }
}
 : 0
3) Scanning file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseXOR.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
// 
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_BitwiseXOR {

    public Je_1_NonJoosConstructs_AssignmentOperations_BitwiseXOR() {}

    public static int test() {
	int x = 42;
	x^=81;
	return x;
    }
}
 : 0
4) Scanning file: Je_1_Escapes_2DigitOctal_3.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_2DigitOctal_3{

    public Je_1_Escapes_2DigitOctal_3() {}

    public static int test(){
	String s = "\80";
	return 123;
    }
}

 : 0
5) Scanning file: Je_1_Escapes_2DigitOctal_1.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_2DigitOctal_1{

    public Je_1_Escapes_2DigitOctal_1() {}

    public static int test(){
	char s = '\08';
	return 123;
    }
}

 : 0
6) Scanning file: Je_1_Escapes_1DigitOctal_3.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_1DigitOctal_3{

    public Je_1_Escapes_1DigitOctal_3() {}

    public static int test(){
 	char c = '\9';
	return 123;
    }
}
 : 0
7) Scanning file: Je_1_NonJoosConstructs_Bitwise_Negation.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Bitwise operators not allowed
 */
public class Je_1_NonJoosConstructs_Bitwise_Negation {

    public Je_1_NonJoosConstructs_Bitwise_Negation() {}
    
    public static int test() {
	int x = 30;
	return ~x;
    }
}

 : 0
8) Scanning file: Je_1_NonJoosConstructs_Choice.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
/**
 * Parser/weeder:
 * - Choice operator not permitted
 */
public class Je_1_NonJoosConstructs_Choice {

    public Je_1_NonJoosConstructs_Choice() {}

    public static int test() {
	int x = 123;
	return x==42 ? 87 : x; 
    }
}
 : 0
9) Scanning file: Je_1_Escapes_NonExistingEscape.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - '\a' is not a legal character escape sequence
 */
public class Je_1_Escapes_NonExistingEscape {

    public Je_1_Escapes_NonExistingEscape() {}

    public static int test() {
	char c = '\a'; 
	return 123;
    }
}
 : 0
10) Scanning file: Je_1_Escapes_1DigitOctal_1.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_1DigitOctal_1{

    public Je_1_Escapes_1DigitOctal_1() {}

    public static int test(){
 	char c = '\8';
	return 123;
    }
}
 : 0
11) Scanning file: Je_1_Escapes_2DigitOctal_2.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_2DigitOctal_2{

    public Je_1_Escapes_2DigitOctal_2() {}

    public static int test(){
	char s = '\80';
	return 123;
    }
}

 : 0
12) Scanning file: Je_1_Escapes_3DigitOctal_1.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_3DigitOctal_1{

    public Je_1_Escapes_3DigitOctal_1() {}

    public static int test(){
	char s = '\008';
	return 123;
    }
}

 : 0
13) Scanning file: Je_1_LabeledStatements.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: LEXER_EXCEPTION
// JOOS2: LEXER_EXCEPTION
// JAVAC: 
/**
 * Parser/weeder:
 * - Labeled statments not allowed
 */
public class Je_1_LabeledStatements {
    
    public Je_1_LabeledStatements(){}

    public static int test() {
	int x = 99;
    loop:
	while (x>0) {
	    x=x-1;
	}
	return 123;
    }
}

 : 0
14) Scanning file: Je_1_Escapes_1DigitOctal_4.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_1DigitOctal_4{

    public Je_1_Escapes_1DigitOctal_4() {}

    public static int test(){
 	String c = "\9";
	return 123;
    }
}
 : 0
15) Scanning file: Je_1_Escapes_1DigitOctal_2.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_1DigitOctal_2{

    public Je_1_Escapes_1DigitOctal_2() {}

    public static int test(){
 	String c = "\8";
	return 123;
    }
}
 : 0
16) Scanning file: Je_1_Escapes_3DigitOctal_3.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,LEXER_EXCEPTION
// JOOS2:PARSER_WEEDER,LEXER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/Weeder
 * - Add character escapes.
 */
public class Je_1_Escapes_3DigitOctal_3{

    public Je_1_Escapes_3DigitOctal_3() {}

    public static int test(){
	char s = '\400';
	return 123;
    }
}
 : 0
17) Parsing file: Je_1_Extends_SimpleTypeArray.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_Extends_SimpleTypeArray extends int[] {

    public Je_1_Extends_SimpleTypeArray() {}

    public static int test() {
	return 123;
    }

}
 : 0
18) Parsing file: Je_1_ClassDeclaration_WrongFileName_Dot.foo.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_SOURCE_FILE_NAME
// JOOS2:PARSER_WEEDER,INVALID_SOURCE_FILE_NAME
// JAVAC:UNKNOWN
// 
public class Je_1_ClassDeclaration_WrongFileName_Dot {
	public Je_1_ClassDeclaration_WrongFileName_Dot() {}
	
	public static int test() {
		return 123;
	}
}
 : 0
19) Parsing file: Je_1_Interface_ConstructorBody.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: JOOS1_INTERFACE,PARSER_EXCEPTION
// JOOS2: INTERFACE_CONSTRUCTOR,PARSER_EXCEPTION
// JAVAC: UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No interfaces allowed
 * - (Joos 2) An interface must contain no fields or constructors
 */
public interface Je_1_Interface_ConstructorBody {
	
    public Je_1_Interface_ConstructorBody() {}
    
    public int test();

}
 : 0
20) Parsing file: Je_1_MultiArrayCreation_MissingDimension_4.java : Check if scanner can scan this file : 
//PARSER_WEEDER
//JOOS1:PARSER_EXCEPTION
//JOOS2:PARSER_EXCEPTION
//JAVAC:UNKNOWN

public class Je_1_MultiArrayCreation_MissingDimension_4 {
	
	public Je_1_MultiArrayCreation_MissingDimension_4() {}

	public static int test() {
		int[][][] array = new int[2][][2];
		return 123;
	}
	
}
 : 0
21) Parsing file: Je_1_PackagePrivate_Method.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
public class Je_1_PackagePrivate_Method {

    public Je_1_PackagePrivate_Method() {}

    public static int test() {
		return 123;
    }

    static void packagePrivateMethod() {
    }
}
 : 0
22) Parsing file: Je_1_NonJoosConstructs_NestedTypes.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Nested types not allowed.
 */
public class Je_1_NonJoosConstructs_NestedTypes {

    public Je_1_NonJoosConstructs_NestedTypes() {}

    public class A {
	
		public A(){}
    }
    
    public static int test() {
    	return 123;
    }
}
 : 0
23) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseOr.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
// 
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_BitwiseOr {

    public Je_1_NonJoosConstructs_AssignmentOperations_BitwiseOr() {}

    public static int test() {
	int x = 91;
	x|=42;
	return x;
    }
}
 : 0
24) Parsing file: Je_1_For_PrimaryExpInUpdate.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Primary expression not allowed in update clause of for loop
 */
public class Je_1_For_PrimaryExpInUpdate {

    public Je_1_For_PrimaryExpInUpdate() {}

    public static int test() {
	int x = 0;
	for (x=1; x<10; 42) { }
	return 123;
    }

}
 : 0
25) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Plus.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
// 
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_Plus {

    public Je_1_NonJoosConstructs_AssignmentOperations_Plus() {}

    public static int test() {
	int x = 81;
	x+=42;
	return x;
    }
}
 : 0
26) Parsing file: Je_16_Circularity_1.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_THIS_CALL,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,CIRCULAR_CONSTRUCTOR_INVOCATION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No explicit super or this statements allowed
 * Typecheck:
 * - (Joos 2) Check that constructors are not invoking each other
 * circularly using explicit this constructor invocation statements.
 */
public class Je_16_Circularity_1 {
	
    public Je_16_Circularity_1(int i) {
	this();
    }
    
    public Je_16_Circularity_1() {
	this(100);
    }
    
    public static int test() {
	return 123;
    }
}
 : 0
27) Parsing file: Je_Native.java : Check if scanner can scan this file : 
public class Je_Native {
    public native int m();
}
 : 0
28) Parsing file: Je_1_Extends_NamedTypeArray.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_Extends_NamedTypeArray extends Object[] {

    public Je_1_Extends_NamedTypeArray() {}

    public static int test() {
	return 123;
    }

}
 : 0
29) Parsing file: Je_16_IncDec_StringPreInc.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, NON_NUMERIC_INC_DEC
// JAVAC:UNKNOWN
/**
 * Parser/Weeder:
 * - (Joos 1) Increment and decrement operators not allowed
 * Typecheck:
 * - (Joos 2) Increment operator is only allowed on numeric types
 */
public class Je_16_IncDec_StringPreInc {
	
    public Je_16_IncDec_StringPreInc() {}
    
    public static int test() {
	String d = "1";
	++d;
	return 123;
    }
}
 : 0
30) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Divide.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
// 
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_Divide {

    public Je_1_NonJoosConstructs_AssignmentOperations_Divide() {}

    public static int test() {
	int x = 246;
	x/=2;
	return x;
    }
}
 : 0
31) Parsing file: Je_1_Methods_MissingAccessModifier.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Methods must have a modifier
 */
public class Je_1_Methods_MissingAccessModifier {

    public Je_1_Methods_MissingAccessModifier() { }
    
    public static int test() { 
	return 123;
    }
	
    int bar() {
	return 123;
    }
				  
}
 : 0
32) Parsing file: Je_6_Assignable_Instanceof_SimpleTypeOfSimpleType.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,TYPE_CHECKING,INVALID_INSTANCEOF
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,TYPE_CHECKING,INVALID_INSTANCEOF
// JAVAC:UNKNOWN
// 
/**
 * Typecheck:
 * - Cannot check instanceof on int
 */
public class Je_6_Assignable_Instanceof_SimpleTypeOfSimpleType {

    public Je_6_Assignable_Instanceof_SimpleTypeOfSimpleType () {}

    public static int test() {
	boolean b = (7 instanceof int);
        return 123;
    }

}
 : 0
33) Parsing file: Je_1_VoidType_Field.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_FIELD,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_FIELD,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Void type not allowed for fields
 */
public class Je_1_VoidType_Field {

    public void foo;

    public Je_1_VoidType_Field() {}

    public static int test() {
	return 123;
    }

}
 : 0
34) Parsing file: Je_1_PackagePrivate_Class.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:RUN_EXCEPTION
class Je_1_PackagePrivate_Class {
    
    public Je_1_PackagePrivate_Class() {}
    
    public static int test() {
	return 123;
    }
}
 : 0
35) Parsing file: Je_1_IncDec_Parenthesized.java : Check if scanner can scan this file : 
//PARSER_WEEDER
//JOOS1:PARSER_EXCEPTION
//JOOS2:PARSER_EXCEPTION

public class Je_1_IncDec_Parenthesized {
	public Je_1_IncDec_Parenthesized() {}
	
	public static int test() {
		int i = 122;
		return ++(i);
	}
}
 : 0
36) Parsing file: Je_16_IncDec_Final_PreDec.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, ASSIGN_TO_FINAL_FIELD
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) Increment and decrement operators not allowed
 * Typecheck:
 * - (Joos 2) A final field must not be assigned to.
 */
public class Je_16_IncDec_Final_PreDec {

    public Je_16_IncDec_Final_PreDec(){
	--Integer.MAX_VALUE;
    }
    
    public static int test() {
	return 123;
    }

}
 : 0
37) Parsing file: Je_1_CastToArrayLvalue.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:UNKNOWN
public class Je_1_CastToArrayLvalue {
	public Je_1_CastToArrayLvalue() {}

	public static int test() {
		int[] ia = new int[5];
		int i = (ia[5]) ia;
		return 123;
	}

	public static void main(String[] args) {
		System.out.println(Je_1_CastToArrayLvalue.test());
	}
}
 : 0
38) Parsing file: Je_16_MultiArrayCreation_Assign_1.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_MULTI_ARRAY,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,ASSIGN_TYPE
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No multidimensional array creation expressions allowed.
 * - (Joos 2) int[][] is not assignable to int
 */
public class Je_16_MultiArrayCreation_Assign_1{
    
    public Je_16_MultiArrayCreation_Assign_1(){}
    
    public static int test(){
	int a = new int[5][2];
	return 120;
    }
}
 : 0
39) Parsing file: Je_1_Array_Data.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1:PARSER_EXCEPTION
// JOOS2:PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Array data expressions not allowed
 */
public class Je_1_Array_Data {

    public Je_1_Array_Data() {}

    public static int test() {
	int[] x = { 123,1,2,3 };
	return 123;
    }
}

 : 0
40) Parsing file: Je_1_AbstractMethod_EmptyBody.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,ABSTRACT_METHOD_BODY
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,ABSTRACT_METHOD_BODY
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - An abstract method must not have a body
 */
public abstract class Je_1_AbstractMethod_EmptyBody {

    public Je_1_AbstractMethod_EmptyBody () {}
    
    public abstract int foo() {}

    public static int test() {
        return 123;
    }

}
 : 0
41) Parsing file: Je_16_IncDec_StringPostInc.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, NON_NUMERIC_INC_DEC
// JAVAC:UNKNOWN
/**
 * Parser/Weeder:
 * - (Joos 1) Increment and decrement operators not allowed
 * Typecheck:
 * - (Joos 2) Increment operator only allowed on numeric types
 */
public class Je_16_IncDec_StringPostInc{
	
    public Je_16_IncDec_StringPostInc() {}
    
    public static int test() {
	String d = "1";
	d++;
	return 123;
    }
}
 : 0
42) Parsing file: Je_1_Cast_NonstaticField.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:UNKNOWN
public class Je_1_Cast_NonstaticField {
    /* Parser+Weeder => cast to a nonstatic field is not allowed */
    public int value = 123;
    
    public Je_1_Cast_NonstaticField() {}
    
    public static int test() {
	int a = (new Je_1_Cast_NonstaticField().value)123;
	return a;
    }
}
 : 0
43) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_BitwiseAnd.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
// 
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_BitwiseAnd {

    public Je_1_NonJoosConstructs_AssignmentOperations_BitwiseAnd() {}

    public static int test() {
	int x = 127;
	x&=251;
	return x;
    }
}
 : 0
44) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Remainder.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_Remainder {

    public Je_1_NonJoosConstructs_AssignmentOperations_Remainder() {}

    public static int test() {
	int x = 15375;
	x%=124;
	return x;
    }
}
 : 0
45) Parsing file: Je_1_For_PrimaryExpInInit.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Primary expression not allowed in init clause of for loop
 */
public class Je_1_For_PrimaryExpInInit {

    public Je_1_For_PrimaryExpInInit() {}

    public static int test() {
	int x = 0;
	for (7; x<10; x=x+1) {}
	return 123;
    }

}
 : 0
46) Parsing file: Je_1_Formals_Initializer_Constructor.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A formal parameter must not have an initializer.
 */
public class Je_1_Formals_Initializer_Constructor {

    public Je_1_Formals_Initializer_Constructor(int abc=123) {}

    public static int test() {
	return 123;
    }
}
 : 0
47) Parsing file: Je_1_ClassInstantiation_InstantiateSimpleType.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_ClassInstantiation_InstantiateSimpleType {

    public Je_1_ClassInstantiation_InstantiateSimpleType() { }

    public static int test() { 
	new boolean();
	return 123; 
    }

}
 : 0
48) Parsing file: Je_1_VoidType_ArrayDeclaration.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_ARRAY,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_ARRAY,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node which is not the return type of a method must not be
 * an AVoidType 
 */
public class Je_1_VoidType_ArrayDeclaration {

    public Je_1_VoidType_ArrayDeclaration(){}
    
    public static int test(){
	void[] a;
	return 123;
    }
}

 : 0
49) Parsing file: Je_1_VoidType_VoidMethod.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_VARIABLE,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_VARIABLE,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Void type not allowed for formal parameters
 */
public class Je_1_VoidType_VoidMethod {
	public Je_1_VoidType_VoidMethod() {
		
	}
	
	public void method(void i) {
	}
	
	public static int test() {
		return 123;
	}
}
 : 0
50) Parsing file: Je_1_Cast_DoubleParenthese.java : Check if scanner can scan this file : 
//JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
//JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
//JAVAC:UNKNOWN
public class Je_1_Cast_DoubleParenthese {
	public Je_1_Cast_DoubleParenthese() {}
	
	public static int test() {
		Object o = ((Object))null;
		return 123;
	}
}
 : 0
51) Parsing file: Je_1_VoidType_Formals.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_VARIABLE,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_VARIABLE,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Void type not allowed for formal parameters
 */
public class Je_1_VoidType_Formals {

    public Je_1_VoidType_Formals() {}

    public static int test(void foo) {
	return 123;
    }
}
 : 0
52) Parsing file: Je_1_NonJoosConstructs_Break.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Break statement not allowed.
 */
public class Je_1_NonJoosConstructs_Break {

    public Je_1_NonJoosConstructs_Break() {}

    public static int test() {
	int x = 117;
	while (x>0) {
	    x=x-1;
	    if (x==42) { 
		break; 
	    }
	}
	return 123;
    }
}

 : 0
53) Parsing file: Je_1_Cast_ToMethodInvoke.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Method invocation not allowed as type in cast.
 */
public class Je_1_Cast_ToMethodInvoke {

    public Je_1_Cast_ToMethodInvoke () {}

    public Je_1_Cast_ToMethodInvoke foo() {
	return null;
    }

    public static int test() {
	Je_1_Cast_ToMethodInvoke x = null;
	Object y = (x.foo()) x;
        return 123;
    }

}
 : 0
54) Parsing file: Je_1_Formals_Initializer_Method.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A formal parameter must not have an initializer.
 */
public class Je_1_Formals_Initializer_Method {

    public Je_1_Formals_Initializer_Method() {}

    public static int test(int i = 123) {
	return 123;
    }
}
 : 0
55) Parsing file: Je_1_MultiArrayCreation_MissingDimension_2.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - (Joos 1) No multidimensional array creation expressions allowed.
 * - (Joos 2) At least one dimension must be given in multidimensional
 * array creation expressions.  
 */
public class Je_1_MultiArrayCreation_MissingDimension_2 {

    public Je_1_MultiArrayCreation_MissingDimension_2() {}

    public static int test() {
        int[][] a = new int[][];
        return 123;
    }
}
 : 0
56) Parsing file: Je_1_VoidType_ArrayCreation.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_ARRAY,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_ARRAY,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node which is not the return type of a method must not be
 * an AVoidType 
 */
public class Je_1_VoidType_ArrayCreation {
    
    public Je_1_VoidType_ArrayCreation(){}
    
    public static int test(){
	Object a = new void[5];
	return 123;
    }
}

 : 0
57) Parsing file: Je_16_SuperThis_InvalidThisParameter.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_THIS_CALL,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,NO_MATCHING_CONSTRUCTOR_FOUND
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No explicit super or this statements allowed.
 * Typecheck:
 * - (Joos 2) Check that any method or constructor invocation
 * resolves to a uniquely closest matching method or constructor
 * (15.12.2).  
 */
public class Je_16_SuperThis_InvalidThisParameter {

    public Je_16_SuperThis_InvalidThisParameter() {
	this(42);
    }

    public Je_16_SuperThis_InvalidThisParameter(String s) {}
    
    public static int test() { 
	return 123; 
    }
}


 : 0
58) Parsing file: Je_1_Cast_Expression.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:UNKNOWN

public class Je_1_Cast_Expression {
    	/* Parser+Weeder => cast to an expression is not allowed */
	public Je_1_Cast_Expression() {}
	
	public static int test() {
		int a = 1;
		Object o = (5-a)null;
		return 123;
	}
}
 : 0
59) Parsing file: Je_16_ClosestMatch_Array.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_MULTI_ARRAY,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,ASSIGN_TYPE
// JAVAC:UNKNOWN
/* 
 * Calls a static method without naming the class. 
 */

public class Je_16_ClosestMatch_Array {
    public Je_16_ClosestMatch_Array() {}
    
    public static int method(Object[] e) { return 123; }
    public static void method(Cloneable[][] e) {}
    public static int method(Cloneable[] e) { return 123; }
    
    public static int test() {
	Cloneable[][] c = null;
	return method(c);
    }
}
 : 0
60) Parsing file: Je_1_Interface_Field.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: JOOS1_INTERFACE,PARSER_EXCEPTION
// JOOS2: INTERFACE_FIELD,PARSER_EXCEPTION
// JAVAC: UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No interfaces allowed
 * - (Joos 2) An interface must contain no fields or constructors
 */
public interface Je_1_Interface_Field {
    
    public int field;
    
}
 : 0
61) Parsing file: Je_1_IntRange_MinusTooBigInt.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_INTEGER
// JOOS2:PARSER_WEEDER,INVALID_INTEGER
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Check that all integer constant values are within the legal range
 * for the int type.
 */
public class Je_1_IntRange_MinusTooBigInt {
    
    public Je_1_IntRange_MinusTooBigInt(){}
    
    public static int test() {
	return 2147483000 - 2147483648 + 771;
    }
}

 : 0
62) Parsing file: Je_1_Access_ProtectedLocal.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - A local variable must not have an access modifier.
 */
public class Je_1_Access_ProtectedLocal{

    public Je_1_Access_ProtectedLocal(){}

    public static int test(){
	protected int a = 123;
	return a;
    }
}
 : 0
63) Parsing file: Je_1_Implements_Value.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_Implements_Value implements 4 {

    public Je_1_Implements_Value() { }

    public static int test() { 
	return 123; 
    }

}
 : 0
64) Parsing file: Je_1_AbstractMethod_Body.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,ABSTRACT_METHOD_BODY
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,ABSTRACT_METHOD_BODY
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - An abstract method must not have a body
 */
public class Je_1_AbstractMethod_Body {

    public Je_1_AbstractMethod_Body() { }

    public static int test() { 
	return 123;
    }

    public abstract int foo() {
	return 123;
    }
}
 : 0
65) Parsing file: Je_1_VoidType_Local.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_VARIABLE,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_VARIABLE,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node which is not the return type of a method must not be
 * an AVoidType
 */
public class Je_1_VoidType_Local {

    public Je_1_VoidType_Local() {}

    public static int test() {
	void foo = null;
	return 123;
    }
}
 : 0
66) Parsing file: Je_1_IntRange_TooBigIntNegated.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_INTEGER
// JOOS2:PARSER_WEEDER,INVALID_INTEGER
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - For each integer literal in the program, .... check that the
 * number is within the legal range for 32-bit signed integers.  
 */
public class Je_1_IntRange_TooBigIntNegated {

    public Je_1_IntRange_TooBigIntNegated(){}
    
    public static int test() {
	return -(2147483648) + 2147483000 + 771;
    }
}

 : 0
67) Parsing file: Je_1_MultiArrayTypes_Dimensions.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - (Joos 1) Multidimensional array types not allowed
 * - (Joos 2) Dimensions not allowed in array types.
 */
public class Je_1_MultiArrayTypes_Dimensions {

    public Je_1_MultiArrayTypes_Dimensions() {}

    public static int test() {
        int[][42] a = new int[2][2];
        return 123;
    }
}
 : 0
68) Parsing file: Je_1_IncDec_IncDecNotLvalue.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - (Joos 1) Increment and decrement expressions not allowed
 * - (Joos 2) Post increment must only be used on lvalues
 */
public class Je_1_IncDec_IncDecNotLvalue {
	
    public Je_1_IncDec_IncDecNotLvalue() {}
    
    public static int test() {
	int i = 5;
	--i++;
	return 123;
    }

}
 : 0
69) Parsing file: Je_1_AbstractMethod_Static.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,ABSTRACT_METHOD_FINAL_OR_STATIC
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,ABSTRACT_METHOD_FINAL_OR_STATIC
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - An abstract method cannot be static or final.
 */
public abstract class Je_1_AbstractMethod_Static {

    public Je_1_AbstractMethod_Static() { }

    public static int test() { 
	return 123; 
    }

    public abstract static void foo();
}
 : 0
70) Parsing file: Je_1_Declarations_MultipleVars.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1:PARSER_EXCEPTION
// JOOS2:PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Multiple variable in same declaration not allowed. 
 */
public class Je_1_Declarations_MultipleVars {

    public Je_1_Declarations_MultipleVars() {}

    public static int test() {
	int i=0, j=10;
	return 123;
    }

}
 : 0
71) Parsing file: Je_1_InstanceOf_Null.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - null value is not a type
 */
public class Je_1_InstanceOf_Null {

    public Je_1_InstanceOf_Null() { }

    public static int test() {
	Object o=new Object();
	if (o instanceof null)
	    return 100;
	return 123;
    }
}
 : 0
72) Parsing file: Je_1_Array_Data_Empty.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1:PARSER_EXCEPTION
// JOOS2:PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Array data expressions not allowed
 */
public class Je_1_Array_Data_Empty {

    public Je_1_Array_Data_Empty() {}

    public static int test() {
	int[] x = {};
	return 123;
    }
}

 : 0
73) Parsing file: Je_1_Array_OnVariableNameInDecl.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1:PARSER_EXCEPTION
// JOOS2:PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Array brackets ('[]') are not allowed to occur in the name of a
 *   variable being declared.
 */
public class Je_1_Array_OnVariableNameInDecl {

    public Je_1_Array_OnVariableNameInDecl() { }

    public static int test() {
	int a[];
	return 123;
    }

}
 : 0
74) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Minus.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
// 
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_Minus {

    public Je_1_NonJoosConstructs_AssignmentOperations_Minus() {}

    public static int test() {
	int x = 165;
	x-=42;
	return x;
    }
}
 : 0
75) Parsing file: Je_16_IncDec_StringPreDec.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, NON_NUMERIC_INC_DEC
// JAVAC:UNKNOWN
/**
 * Parser/Weeder:
 * - (Joos 1) Increment and decrement operators not allowed
 * Typecheck:
 * - (Joos 2) Decrement operator is only allowed on numeric types
 */
public class Je_16_IncDec_StringPreDec {
	
    public Je_16_IncDec_StringPreDec() {}
    
    public static int test() {
	String d = "1";
	--d;
	return 123;
    }
}
 : 0
76) Parsing file: Je_1_Extends_SimpleType.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_Extends_SimpleType extends int {

    public Je_1_Extends_SimpleType() {}
    
    public static int test() {
	return 123;
    }

}
 : 0
77) Parsing file: Je_1_AbstractClass_AbstractConstructor.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - A constructor must not be abstract.
 */
public abstract class Je_1_AbstractClass_AbstractConstructor{

    public abstract Je_1_AbstractClass_AbstractConstructor();

}
 : 0
78) Parsing file: Je_1_Methods_StaticFinal.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,STATIC_FINAL_METHOD,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,STATIC_FINAL_METHOD,PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - A static method cannot be final.
 */
public class Je_1_Methods_StaticFinal {

    public Je_1_Methods_StaticFinal() {}

    public static final int test(){
	return 123;
    }

}
 : 0
79) Parsing file: Je_1_NonJoosConstructs_MultipleTypesPrFile.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Multiple types pr. file not allowed.
 */
public class Je_1_NonJoosConstructs_MultipleTypesPrFile {

    public Je_1_NonJoosConstructs_MultipleTypesPrFile(){}
    
    public static int test() {
    	return 123;
    }
}

class A {

    public A(){}
}
 : 0
80) Parsing file: Je_1_Cast_LeftHandSideOfAssignment_1.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN

/**
 * Parser/weeder:
 * - Cast of left-hand side of assignment not allowed
 */
public class Je_1_Cast_LeftHandSideOfAssignment_1 {

    public Je_1_Cast_LeftHandSideOfAssignment_1() {}

    public static int test() {
	Object o;
	(Object)o=null;
	return 123;
    }


}
 : 0
81) Parsing file: Je_1_MultiArrayCreation_NoType.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - (Joos 1) No multidimensional array creation expressions allowed
 * - (Joos 2) Multidimenstional array creation expressions must have a
 * base type.
 */
public class Je_1_MultiArrayCreation_NoType {

    public Je_1_MultiArrayCreation_NoType() {}

    public static int test() {
        int[][] a = new [2][2];
        return 123;
    }
}
 : 0
82) Parsing file: Je_1_Implements_NamedTypeArray.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_Implements_NamedTypeArray implements Object[] {

    public Je_1_Implements_NamedTypeArray() {}

    public static int test() {
	return 123;
    }

}
 : 0
83) Parsing file: Je_1_Interface_StaticMethod.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: JOOS1_INTERFACE,PARSER_EXCEPTION
// JOOS2: STATIC_OR_FINAL_INTERFACE_METHOD,PARSER_EXCEPTION
// JAVAC: UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No interfaces allowed
 * - (Joos 2) An interface method cannot be static or final
 */
public interface Je_1_Interface_StaticMethod {

    public static void foo();

}
 : 0
84) Parsing file: Je_1_For_MultipleUpdates.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2: PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC: 
/**
 * Parser/weeder:
 * - Multiple expressions not allowed in for update
 */
public class Je_1_For_MultipleUpdates{

    public Je_1_For_MultipleUpdates(){}

    public static int test(){
	for (int i = 0; i < 10; i = i + 1, i = i + 2){}
	return 123;
    }
}
 : 0
85) Parsing file: Je_1_Implements_SimpleType.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_Implements_SimpleType implements int {

    public Je_1_Implements_SimpleType() {}

    public static int test() {
	return 123;
    }

}
 : 0
86) Parsing file: Je_16_ClosestMatch_Constructor_NoClosestMatch_This.java : Check if scanner can scan this file : 
// TYPE_CHECKING
// JOOS1: PARSER_WEEDER,JOOS1_THIS_CALL,PARSER_EXCEPTION
// JOOS2: AMBIGUOUS_OVERLOADING
// JAVAC:UNKNOWN
/**
 * Typecheck: 
 * - (Joos 1) Check that any method or constructor invocation resolves
 *   to a unique method with a type signature matching exactly the
 *   static types of the argument expressions.
 * - (Joos 2) Check that any method or constructor invocation resolves
 *   to a uniquely closest matching method or constructor (15.12.2).  
 */
public class Je_16_ClosestMatch_Constructor_NoClosestMatch_This{

    public Je_16_ClosestMatch_Constructor_NoClosestMatch_This(){
	this ((short)1, (short)2);
    }

    public Je_16_ClosestMatch_Constructor_NoClosestMatch_This(int a, short b) {}
    
    public Je_16_ClosestMatch_Constructor_NoClosestMatch_This(short a, int b) {}
    
    public static int test() {
	return 123;
    }
}
 : 0
87) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_SignShiftRight.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_SignShiftRight {

    public Je_1_NonJoosConstructs_AssignmentOperations_SignShiftRight() {}

    public static int test() {
	int x = -492;
	x>>=2;
	return x+246;
    }
}
 : 0
88) Parsing file: Je_1_Interface_NoBody.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - (Joos 1) No interfaces allowed
 * - (Joos2) An interface must have a body
 */
public interface Je_1_Interface_NoBody
 : 0
89) Parsing file: Je_1_Methods_NonAbstractNoBody.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,NON_ABSTRACT_METHOD_BODY,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,NON_ABSTRACT_METHOD_BODY,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A non-abstract method must have a body.
 */
public class Je_1_NonAbstractMethod_Body {

    public Je_1_NonAbstractMethod_Body() { }

    public static int test() { 
	return 123; 
    }

    public void foo();

}
 : 0
90) Parsing file: Je_1_IntRange_TooBigInt.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_INTEGER
// JOOS2:PARSER_WEEDER,INVALID_INTEGER
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - For each integer literal in the program, .... check that the
 * number is within the legal range for 32-bit signed integers.  
 */
public class Je_1_IntRange_TooBigInt {

    public Je_1_IntRange_TooBigInt(){}
    
    public static int test() {
	return 2147483648 - 2147483525;
    }
}

 : 0
91) Parsing file: Je_1_AbstractClass_Final.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,ABSTRACT_FINAL_CLASS,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,ABSTRACT_FINAL_CLASS,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - An abstract class cannot be final
 */
public final abstract class Je_1_AbstractClass_Final {

    public Je_1_AbstractClass_Final() {}

    public static int test() {
	return 123;
    }

}
 : 0
92) Parsing file: Je_16_IncDec_Final_PreInc.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, ASSIGN_TO_FINAL_FIELD
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) Increment or decrement operators not allowed
 * Typecheck:
 * - (Joos 2) A final field must not be assigned to.
 */
public class Je_16_IncDec_Final_PreInc {

    public Je_16_IncDec_Final_PreInc(){
	++Integer.MIN_VALUE;
    }
    
    public static int test() {
	return 123;
    }

}
 : 0
93) Parsing file: Je_1_InstanceInitializers.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION
// JOOS2: PARSER_EXCEPTION
// JAVAC: 
/**
 * Parser/weeder:
 * - Instance initializers not allowed.
 */
public class Je_1_InstanceInitializers {

    public Je_1_InstanceInitializers() {}

    public int x;

    {
	x = 123; 
    }

    public static int test() {
	return 123;
    }
}
 : 0
94) Parsing file: Je_1_ClassDeclaration_WrongFileName_Suffix.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_SOURCE_FILE_NAME
// JOOS2:PARSER_WEEDER,INVALID_SOURCE_FILE_NAME
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A class declaration must reside in a .java source file with the same
 * base name as the class.
 **/
public class Suffix{

    public Suffix(){}

    public static int test(){
	return 123;
    }
}
 : 0
95) Parsing file: Je_1_VoidType_Cast.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_CAST,SYNTAX_ERROR,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_CAST,SYNTAX_ERROR,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node which is not the return type of a method must not be
 * an AVoidType 
 */
public class Je_1_VoidType_Cast {

    public Je_1_VoidType_Cast(){}

    public static int test(){
	Je_VoidCast a = null;
	Object b = (void) a;
	return 123;
    }

}
 : 0
96) Parsing file: Je_1_Access_PublicLocal.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - A local variable must not have an access modifier.
 */
public class Je_1_Access_PublicLocal{

    public Je_1_Access_PublicLocal(){}

    public static int test(){
	public int a = 123;
	return a;
    }
}
 : 0
97) Parsing file: Je_1_Interface_WrongFileName.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,JOOS1_INTERFACE,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,INVALID_SOURCE_FILE_NAME
// JAVAC:UNKNOWN
// 
public interface WrongName {
}
 : 0
98) Parsing file: Je_1_AbstractMethod_Final.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,ABSTRACT_METHOD_FINAL_OR_STATIC,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,ABSTRACT_METHOD_FINAL_OR_STATIC,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - An abstract method cannot be static or final.
 */
public abstract class Je_1_AbstractMethod_Final {

    public Je_1_AbstractMethod_Final() { }

    public static int test() { 
	return 123; 
    }

    public abstract final void foo();
}
 : 0
99) Parsing file: Je_16_StaticThis_ArgumentToThis.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_THIS_CALL,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,THIS_BEFORE_SUPER_CALL
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) Explicit this statements not allowed
 * Typecheck:
 * - A this reference (AThisExp) must not occur, explicitly or
 * implicitly, in a static method, an initializer for a static field,
 * or an argument to a super or this constructor invocation.  
 */
public class Je_16_StaticThis_ArgumentToThis{

    public Je_16_StaticThis_ArgumentToThis(){
	this(this);
    }

    public Je_16_StaticThis_ArgumentToThis(Je_16_StaticThis_ArgumentToThis o){}

    public static int test(){
	return 123;
    }
}
 : 0
100) Parsing file: Je_1_Literals_Class.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION
// JOOS2: PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Class literals not allowed.
 */
public class Je_1_Literals_Class {

    public Je_1_Literals_Class() {}

    public static int test() {
	java.lang.Class y = Object.class;
	return 123;
    }
}
 : 0
101) Parsing file: Je_16_IncDec_StringPostDec.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, NON_NUMERIC_INC_DEC
// JAVAC:UNKNOWN
/**
 * Parser/Weeder:
 * - (Joos 1) Increment and decrement operators not allowed
 * Typecheck:
 * - (Joos 2) Increment operator only allowed on numeric types
 */
public class Je_16_IncDec_StringPostDec{
	
    public Je_16_IncDec_StringPostDec() {}
    
    public static int test() {
	String d = "1";
	d--;
	return 123;
    }
}
 : 0
102) Parsing file: Je_1_ClassInstantiation_InstantiateSimpleValue.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_ClassInstantiation_InstantiateSimpleValue {

    public Je_1_ClassInstantiation_InstantiateSimpleValue() { }

    public static int test() { 
	new 1();
	return 123; 
    }

}
 : 0
103) Parsing file: Je_1_Literals_Octal.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION
// JOOS2: PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Octal literals not allowed.
 */
public class Je_1_Literals_Octal{

    public Je_1_Literals_Octal(){}

    public static int test(){
	return 0173;
    }
}
 : 0
104) Parsing file: Je_1_NonJoosConstructs_BitShift_Left.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Bitshift operators not allowed
 */
public class Je_1_NonJoosConstructs_BitShift_Left {

    public Je_1_NonJoosConstructs_BitShift_Left() {}
    
    public static int test() {
	int x = 30;
	return (x << 2) + 3;
    }
}

 : 0
105) Parsing file: Je_16_Circularity_4_Rhoshaped.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_THIS_CALL,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,CIRCULAR_CONSTRUCTOR_INVOCATION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No explicit super or this statements allowed
 * Typecheck:
 * - (Joos 2) Check that constructors are not invoking each other
 * circularly using explicit this constructor invocation statements.
 */
public class Je_16_Circularity_4_Rhoshaped {
	public Je_16_Circularity_4_Rhoshaped() {
		this(1);
	}
	public Je_16_Circularity_4_Rhoshaped(int x) {
		this(1,2);
	}
	public Je_16_Circularity_4_Rhoshaped(int x, int y) {
		this(1);
	}
	public static int test() {
		return 123;
	}
}
 : 0
106) Parsing file: Je_1_SuperThis_ThisAfterStatement.java : Check if scanner can scan this file : 
// PARSER_WEEDER,
// JOOS1: JOOS1_THIS_CALL,THIS_CALL_NOT_FIRST_STATEMENT,PARSER_EXCEPTION
// JOOS2: THIS_CALL_NOT_FIRST_STATEMENT,PARSER_EXCEPTION
// JAVAC: UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No explicit super or this statements allowed
 * - (Joos 2) A super or this statement must be the first statement in
 *   a constructor body.
 */
public class Je_1_SuperThis_ThisAfterStatement {
    
    public Je_1_SuperThis_ThisAfterStatement(){
	int j = 0;
	this();
    }
    
    public int test() {
	return 123;
    }
    
}
 : 0
107) Parsing file: Je_1_Cast_NoParenthesis.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - Type clause in cast must be enclosed in parentheses
 */
public class Je_1_Cast_NoParenthesis {

    public Je_1_Cast_NoParenthesis(){}

    public static int test() {
	int foo = -123;
	return int-foo;
    }
}
 : 0
108) Parsing file: Je_1_IntRange_TooBigInt_InInitializer.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_INTEGER
// JOOS2:PARSER_WEEDER,INVALID_INTEGER
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - For each integer ... Check that the number is within
 * the legal range for 32-bit signed integers.
 */
public class Je_1_IntRange_TooBigInt_InInitializer {

    public Je_1_IntRange_TooBigInt_InInitializer () {}

    public static int test() {
       	int i = 2147483648;
        return 123;
    }

}
 : 0
109) Parsing file: Je_1_Cast_LeftHandSideOfAssignment_2.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - Cast of left-hand side of assignment not allowed
 */
public class Je_1_Cast_LeftHandSideOfAssignment_2 {

    public Je_1_Cast_LeftHandSideOfAssignment_2() {}

    public static int test() {
	Object o;
	Object p = (Object)o=null;
	return 123;
    }


}
 : 0
110) Parsing file: Je_1_InstanceOf_Void.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_INSTANCEOF,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,VOID_TYPE_NOT_RETURN_TYPE,VOID_TYPE_INSTANCEOF,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node which is not the return type of a method must not be
 * an AVoidType
 */
public class Je_1_InstanceOf_Void {

    public Je_1_InstanceOf_Void() {}

    public static int test() { 
	return 123; 
    }

    public boolean foo(Object o) {
	return o instanceof void;
    }
}
 : 0
111) Parsing file: Je_1_Declarations_MultipleVars_Fields.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1:PARSER_EXCEPTION
// JOOS2:PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Multiple variables in same declaration not allowed. 
 */
public class Je_1_Declarations_MultipleVars_Fields {

    public int x,y,z;
    
    public Je_1_Declarations_MultipleVars_Fields() {}
    
    public static int test() {
	return 123;
    }
}
 : 0
112) Parsing file: Je_1_Literals_Long.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION
// JOOS2: PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Long literals not allowed in Joos.
 */
public class Je_1_Literals_Long {

    public Je_1_Literals_Long() {}

    public static int test() {
	String s = Long.toOctalString(123L);
	return 123;
    }
}

 : 0
113) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_Multiply.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
// 
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_Multiply {

    public Je_1_NonJoosConstructs_AssignmentOperations_Multiply() {}

    public static int test() {
	int x = 3;
	x*=41;
	return x;
    }
}
 : 0
114) Parsing file: Je_1_Extends_Value.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Values cannot be extended
 */
public class Je_1_Extends_Value extends 4 {

    public Je_1_Extends_Value() { }

    public static int test() { 
	return 123; 
    }

}
 : 0
115) Parsing file: Je_1_AbstractMethodCannotBeFinal.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,ABSTRACT_METHOD_FINAL_OR_STATIC,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,ABSTRACT_METHOD_FINAL_OR_STATIC,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
  * Parser/weeder:
	* - An abstract method cannot be final.
	*/
public abstract class Je_1_AbstractMethodCannotBeFinal {
	public Je_1_AbstractMethodCannotBeFinal() {}
	public final abstract void foo();
}
 : 0
116) Parsing file: Je_1_Interface_FinalMethod.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: JOOS1_INTERFACE,PARSER_EXCEPTION
// JOOS2: STATIC_OR_FINAL_INTERFACE_METHOD,PARSER_EXCEPTION
// JAVAC: UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No interfaces allowed
 * - (Joos 2) An interface method cannot be static or final
 */
public interface Je_1_Interface_FinalMethod {
    
    public final void foo();

}
 : 0
117) Parsing file: Je_1_Literals_Exponential.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION
// JOOS2: PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Floating point literals not allowed.
 */
public class Je_1_Literals_Exponential {

    public Je_1_Literals_Exponential() {}

    public static int test() {
	Double x = new Double(6.0221415e23);
	return 123;
    }
}

 : 0
118) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_ShiftLeft.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// 
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_ShiftLeft {

    public Je_1_NonJoosConstructs_AssignmentOperations_ShiftLeft() {}

    public static int test() {
	int x = 30;
	x<<=2;
	return x+3;
    }
}
 : 0
119) Parsing file: Je_1_NonJoosConstructs_BitShift_ZeroRight.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Bitshift operators not allowed
 */
public class Je_1_NonJoosConstructs_BitShift_ZeroRight {

    public Je_1_NonJoosConstructs_BitShift_ZeroRight() {}
    
    public static int test() {
	int x = -492;
	return (x >>> 2) - 1073741578;
    }
}

 : 0
120) Parsing file: Je_1_Implements_SimpleTypeArray.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - A PType node in an extends clause, implements clause, throws
 * clause or class instantiation expression must be an ANamedType
 */
public class Je_1_Implements_SimpleTypeArray implements int[] {

    public Je_1_Implements_SimpleTypeArray() {}

    public static int test() {
	return 123;
    }

}
 : 0
121) Parsing file: Je_6_InstanceOf_Primitive_2.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,TYPE_CHECKING,INVALID_INSTANCEOF
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,TYPE_CHECKING,INVALID_INSTANCEOF
// JAVAC:UNKNOWN
// 
/**
 * Typecheck:
 * - Type clause of instanceof must be a reference type
 */
public class Je_6_InstanceOf_Primitive_2 {

    public Je_6_InstanceOf_Primitive_2() {}

    public static int test() { 
	return 123; 
    }

    public boolean foo(Object o) {
	return o instanceof int;
    }
}
 : 0
122) Parsing file: Je_16_IncDec_Final_ArrayLengthInc.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, ASSIGN_TO_ARRAY_LENGTH
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) Increment and decrement operators not allowed
 * Typecheck:
 * - (Joos 2) A final field must not be assigned to. (Array.length is final)
 */
public class Je_16_IncDec_Final_ArrayLengthInc {

    public Je_16_IncDec_Final_ArrayLengthInc() {}

    public static int test() {
	int[] a = new int[7];
	a.length++;
        return 123;
    }

}
 : 0
123) Parsing file: Je_16_IncDec_Final_ArrayLengthDec.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,ASSIGN_TO_ARRAY_LENGTH
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) Increment and decrement operators not allowed
 * Typecheck:
 * - (Joos 2) A final field must not be assigned to. (Array.length is final)
 */
public class Je_16_IncDec_Final_ArrayLengthDec {

    public Je_16_IncDec_Final_ArrayLengthDec () {}

    public static int test() {
	int[] a = new int[7];
	--a.length;
        return 123;
    }

}
 : 0
124) Parsing file: Je_1_NonJoosConstructs_ExpressionSequence.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - Expression sequencing not allowed.
 */
public class Je_1_NonJoosConstructs_ExpressionSequence {

    public Je_1_NonJoosConstructs_ExpressionSequence() {}

    public static int test() {
	int i = 0;
	int j= (i = i + 1, i); 
	return 123;
    }

}
 : 0
125) Parsing file: Je_1_NonJoosConstructs_UnaryPlus.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Unary plus operator not allowed in Joos
 */
public class Je_1_NonJoosConstructs_UnaryPlus {

    public Je_1_NonJoosConstructs_UnaryPlus() {}

    public static int test() {
	int x = 123;
	return +x; 
    }
}
 : 0
126) Parsing file: Je_1_NonJoosConstructs_BitShift_SignRight.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Bitshift operators not allowed
 */
public class Je_1_NonJoosConstructs_BitShift_SignRight {

    public Je_1_NonJoosConstructs_BitShift_SignRight() {}
    
    public static int test() {
	int x = -492;
	return (x >> 2) + 246;
    }
}

 : 0
127) Parsing file: Je_6_InstanceOf_Primitive_1.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,TYPE_CHECKING,INVALID_INSTANCEOF
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,TYPE_CHECKING,INVALID_INSTANCEOF
// JAVAC:UNKNOWN
// 
/**
 * Typecheck:
 * - Type clause of instanceof must be a reference type
 */
public class Je_6_InstanceOf_Primitive_1 {

    public Je_6_InstanceOf_Primitive_1() {}

    public static int test() { 
	return 123; 
    }

    public boolean foo(int i) {
	return i instanceof int;
    }
}
 : 0
128) Parsing file: Je_1_NonJoosConstructs_AssignmentOperations_ZeroShiftRight.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
/**
 * Parser/weeder:
 * - Assignment operations not allowed
 */
public class Je_1_NonJoosConstructs_AssignmentOperations_ZeroShiftRight {

    public Je_1_NonJoosConstructs_AssignmentOperations_ZeroShiftRight() {}

    public static int test() {
	int x = -492;
	x>>>=2;
	return x-1073741578;
    }
}
 : 0
129) Parsing file: Je_16_Circularity_2.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_THIS_CALL,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,CIRCULAR_CONSTRUCTOR_INVOCATION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No explicit super or this statements allowed
 * Typecheck:
 * - (Joos 2) Check that constructors are not invoking each other
 * circularly using explicit this constructor invocation statements.
 */
public class Je_16_Circularity_2 {
	
    public Je_16_Circularity_2(int i) {
	this();
    }
    
    public Je_16_Circularity_2() {
	this("foo", "bar");
    }
    
    public Je_16_Circularity_2(String s1, String s2) {
	this(100);
    }
    
    public static int test() {
	return 123;
    }
    
}
 : 0
130) Parsing file: Je_1_InstanceOf_Primitive.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,TYPE_CHECKING,INVALID_INSTANCEOF
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,TYPE_CHECKING,INVALID_INSTANCEOF
// JAVAC:UNKNOWN
// 
public class Je_1_InstanceOf_Primitive {
    /* Parser+Weeder => instanceof is not allowed on primitive types */
    public Je_1_InstanceOf_Primitive() {}
    
    public static int test() {
	int a = 0;
	if (a instanceof int) return 42;
	return 123;
    }
}
 : 0
131) Parsing file: Je_16_IncDec_Final_PostInc.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, ASSIGN_TO_FINAL_FIELD
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) Increment and decrement operations not allowed.
 * Typecheck:
 * - (Joos 2) A final field must not be assigned to.
 */
public class Je_16_IncDec_Final_PostInc {
	
    public Je_16_IncDec_Final_PostInc(){
	Integer.MIN_VALUE++;
    }
    
    public static int test() {
	return 123;
    }

}
 : 0
132) Parsing file: Je_1_NonJoosConstructs_StaticInitializers.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Static initializers not allowed in joos
 */
public class Je_1_NonJoosConstructs_StaticInitializers {

    public Je_1_NonJoosConstructs_StaticInitializers() {}

    static { 
	Je_1_NonJoosConstructs_StaticInitializers.test(); 
    }

    public static int test() {
	return 123;
    }
}
 : 0
133) Parsing file: Je_1_Locals_Final.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION
// JOOS2: PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Local variables must not be final
 */
public class Je_1_Locals_Final {

    public Je_1_Locals_Final() {}

    public static int test() {
	final int x = 123;
	return 123;
    }
}
 
 : 0
134) Parsing file: Je_1_MultiArrayCreation_Assign_2.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - (Joos 1) No multidimensional array creation expressions allowed.
 * - (Joos 2) Multidimensional array creation expression is not an
 * lvalue
 */
public class Je_1_MultiArrayCreation_Assign_2{
    
    public Je_1_MultiArrayCreation_Assign_2(){}
    
    public static int test(){
	new int[5][2] = 42;
	return 120;
    }
}

 : 0
135) Parsing file: Je_1_PackagePrivate_Field.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION
// JAVAC:
public class Je_1_PackagePrivate_Field {

    int x;

    public Je_1_PackagePrivate_Field() { }

    public static int test() {
	return 123;
    }
}
 : 0
136) Parsing file: Je_1_Interface_ConstructorAbstract.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: JOOS1_INTERFACE,PARSER_EXCEPTION
// JOOS2: INTERFACE_CONSTRUCTOR,PARSER_EXCEPTION
// JAVAC: UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No interfaces allowed
 * - (Joos 2) An interface must contain no fields or constructors
 */
public interface Je_1_Interface_ConstructorAbstract {
	
    public Je_1_Interface_ConstructorAbstract();
    
    public int test();

}
 : 0
137) Parsing file: Je_1_For_StatementInInit.java : Check if scanner can scan this file : 
//JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
//JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
//JAVAC:UNKNOWN

public class Je_1_For_StatementInInit {
	public Je_1_For_StatementInInit() {}
	
	public static int test() {
		int a = 1;
		int i = 1;
		for (if (a == 2) i = 2; i < 2 ; i = i + 1) {
			a = 123;
		}
		return a;
	}
}
 : 0
138) Parsing file: Je_1_Interface_MethodBody.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: JOOS1_INTERFACE,PARSER_EXCEPTION
// JOOS2: INTERFACE_METHOD_WITH_BODY,PARSER_EXCEPTION
// JAVAC: UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No interfaces allowed
 * - (Joos 2) An interface method must not have a body
 */
public interface Je_1_Interface_MethodBody {
	
    public int test() {
	return 123;
    }

}
 : 0
139) Parsing file: Je_1_NegIntTooLow.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_INTEGER
// JOOS2:PARSER_WEEDER,INVALID_INTEGER
// JAVAC:UNKNOWN
// 
public class Je_1_NegIntTooLow {
    /* Parser+Weeder => too low negative int */
    public Je_1_NegIntTooLow () {}

    public static int test() {
	if (-2147483649 < -1)
	    return 123;
	return 7;
    }

    public static void main(String[] args) {
	System.out.println(Je_1_NegIntTooLow.test());
    }

}
 : 0
140) Parsing file: Je_16_IncDec_Final_PostDec.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER, JOOS1_INC_DEC,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING, ASSIGN_TO_FINAL_FIELD
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) Increment or decrement operators not allowed
 * Typecheck:
 * - (Joos 2) A final field must not be assigned to.
 */
public class Je_16_IncDec_Final_PostDec {

    public Je_16_IncDec_Final_PostDec(){
	Integer.MAX_VALUE--;
    }
    
    public static int test() {
	return 123;
    }

}
 : 0
141) Parsing file: Je_16_Circularity_3.java : Check if scanner can scan this file : 
// JOOS1: PARSER_WEEDER,JOOS1_THIS_CALL,PARSER_EXCEPTION
// JOOS2: TYPE_CHECKING,CIRCULAR_CONSTRUCTOR_INVOCATION
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No explicit super or this statements allowed
 * Typecheck:
 * - (Joos 2) Check that constructors are not invoking each other
 * circularly using explicit this constructor invocation statements.
 */
public class Je_16_Circularity_3 {
	
    public Je_16_Circularity_3(int i, String s) {
	this(100, "foo");
    }
    
    public static int test() {
	return 123;
    }
    
}
 : 0
142) Parsing file: Je_1_For_MultipleDeclarationsInInit.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2: PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC: 
/**
 * Parser/weeder:
 * - Multiple declarations not allowed in for initializer.
 */
public class Je_1_For_MultipleDeclarationsInInit{

    public Je_1_For_MultipleDeclarationsInInit(){}

    public static int test(){
	for (int i = 0, j = 10; i < j; i = i + 1){}
	return 123;
    }
}
 : 0
143) Parsing file: Je_1_Literals_Float.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION
// JOOS2: PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Floating point literals not allowed.
 */
public class Je_1_Literals_Float {

    public Je_1_Literals_Float() {}

    public static int test() {
	Float x = new Float(1.618034f);
	return 123;
    }
}

 : 0
144) Parsing file: Je_1_For_DeclarationInUpdate.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - Declarations not allowed in for update
 */
public class Je_1_For_DeclarationInUpdate {

    public Je_1_For_DeclarationInUpdate() {}

    public static int test() {
	for (int i=0; i<10; int j=i) {}
	return 123;
    }

}
 : 0
145) Parsing file: Je_1_ClassDeclaration_WrongFileName.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_SOURCE_FILE_NAME
// JOOS2:PARSER_WEEDER,INVALID_SOURCE_FILE_NAME
// JAVAC:UNKNOWN
// 
public class WrongName {
    
    public WrongName(){}

}
 : 0
146) Parsing file: Je_1_FinalField_NoInitializer.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1:PARSER_EXCEPTION,JOOS1_FINAL_FIELD_DECLARATION
// JOOS2:PARSER_EXCEPTION,MISSING_FINAL_FIELD_INITIALIZER
// JAVAC:UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No final field declarations allowed,
 * - (Joos 2) A final field must have an initializer.
 */
public class Je_1_FinalField_NoInitializer {

    public final int a;
    
    public Je_1_FinalField_NoInitializer() {}
    
    public static int test() {
        return 123;
    }
}
 : 0
147) Parsing file: Je_1_Formals_Final.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1:PARSER_EXCEPTION,SYNTAX_ERROR
// JOOS2:PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:
/**
 * Parser/weeder:
 * - Formal parameters must not be final
 */
public class Je_1_Formals_Final {

    public Je_1_Formals_Final() {}

    public int m(final int x) {
	return 123;
    }

    public static int test() {
	return 123;
    }
}

 
 : 0
148) Parsing file: Je_1_For_NotAStatementInUpdate.java : Check if scanner can scan this file : 
//JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
//JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
//JAVAC:UNKNOWN

public class Je_1_For_NotAStatementInUpdate {
	public Je_1_For_NotAStatementInUpdate() {}
	public static int test() {
		for (boolean b=false;b;true||true);
		return 123;
	}
}

 : 0
149) Parsing file: Je_16_MultiArrayCreation_Null.java : Check if scanner can scan this file : 
//JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,JOOS1_MULTI_ARRAY
//JOOS2:TYPE_CHECKING,NON_NUMERIC_ARRAY_SIZE
//JAVAC:UNKNOWN
public class Je_16_MultiArrayCreation_Null {
	public Je_16_MultiArrayCreation_Null() {}
	
	public static int test() {
		int[][][] a = new int[5][null][];
		return 123;
	}
}
 : 0
150) Parsing file: Je_1_MultiArrayCreation_MissingDimension_1.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,PARSER_EXCEPTION,JOOS1_MULTI_ARRAY
// JOOS2:PARSER_WEEDER,PARSER_EXCEPTION,SYNTAX_ERROR
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder: 
 * - (Joos 1) No multidimensional array creation expressions allowed.
 * - (Joos 2) Missing dimensions in multiple array creation
 * expressions are only allowed from the right end of the
 * dimension sequence.
 */
public class Je_1_MultiArrayCreation_MissingDimension_1 {

    public Je_1_MultiArrayCreation_MissingDimension_1() {}

    public static int test() {
        int[][]a = new int[][2];
        return 123;
    }
}
 : 0
151) Parsing file: Je_1_Literals_Hex.java : Check if scanner can scan this file : 
// PARSER_WEEDER
// JOOS1: PARSER_EXCEPTION
// JOOS2: PARSER_EXCEPTION
// JAVAC:
/**
 * Parser/weeder:
 * - Hex literals not allowed.
 */
public class Je_1_Literals_Hex{

    public Je_1_Literals_Hex(){}

    public static int test(){
	return 0x7B;
    }
}
 : 0
152) Parsing file: Je_1_IntRange_PlusTooBigInt.java : Check if scanner can scan this file : 
// JOOS1:PARSER_WEEDER,INVALID_INTEGER
// JOOS2:PARSER_WEEDER,INVALID_INTEGER
// JAVAC:UNKNOWN
// 
/**
 * Parser/weeder:
 * - For each integer literal in the program, .... check that the
 * number is within the legal range for 32-bit signed integers.  
 */
public class Je_1_IntRange_PlusTooBigInt {

    public Je_1_IntRange_PlusTooBigInt(){}
    
    public static int test() {
	return  0 - 2147483525 + 2147483648;
    }
}

 : 0
153) Parsing file: Je_1_SuperThis_ThisInMethod.java : Check if scanner can scan this file : 
// PARSER_WEEDER,
// JOOS1: JOOS1_THIS_CALL,THIS_CALL_NOT_FIRST_STATEMENT,PARSER_EXCEPTION
// JOOS2: THIS_CALL_NOT_FIRST_STATEMENT,PARSER_EXCEPTION
// JAVAC: UNKNOWN
/**
 * Parser/weeder:
 * - (Joos 1) No explicit super or this statements allowed
 * - (Joos 2) A super or this statement must be the first statement in
 *   a constructor body.
 */
public class Je_1_SuperThis_ThisInMethod {
	
    public Je_1_SuperThis_ThisInMethod(){}
    
    public int test() {
	this();
	return 123;
    }
    
}
 : 0
---------------------------------------------------------------------------------------
Passed 487 out of 640 tests.
